{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Sidebr/Sidebar.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Settings/Settings.module.css","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/Message/Message.tsx","components/redux/redux.tsx","components/Dialogs/Dialogs.tsx","components/Sidebr/Friends/Friends.tsx","components/Sidebr/Sidebar.tsx","App.tsx","render.tsx","index.tsx"],"names":["module","exports","Post","props","className","s","post","item","src","messages","message","likesCount","MyPosts","posts","addPost","newPostText","updateNewPostText","postsDataEl","map","el","newPostRef","React","createRef","ref","value","onChange","current","onClick","postsItems","ProfileInfo","profileInfo","avatar","Profile","content","profilePage","Navbar","nav","to","activeClassName","active","Header","header","News","Music","Settings","settings_wrapper","DialogsItem","path","id","dialogs","name","Message","state","dialogsPage","newMessageText","sidebarSlide","friends","newPost","push","rerenderEntireThree","addMessage","newMessage","updateNewMessageText","Dialogs","dialogsDataEl","e","messagesDataEl","key","createrRef","dialogItem","area","Friends","Sidebar","friendsEl","i","sidebar","App","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f409774.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__176tw\",\"item\":\"Navbar_item__1tyW6\",\"active\":\"Navbar_active__3tqsn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__mv78j\",\"active\":\"Dialogs_active__2VwoL\",\"area\":\"Dialogs_area__SNj38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__1a4iG\",\"messages\":\"Post_messages__1QnxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3nH4T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__CPW6t\",\"avatar\":\"ProfileInfo_avatar__uqiXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3lmpB\",\"friends\":\"Sidebar_friends__32yON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"Profile_posts__2efY1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3XKzH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings_wrapper\":\"Settings_settings_wrapper__1r56p\"};","import React from \"react\";\r\nimport s from './Post.module.css'\r\n\r\ntype PostPropTypes = {\r\n    message: string\r\n    likesCount: number\r\n}\r\n\r\n\r\nconst Post: React.FC<PostPropTypes> = (props) => {\r\n    return (\r\n        <div>\r\n            <div className={s.post}>\r\n                <div className={s.item}>\r\n                    <span>Post</span>\r\n                    <div>\r\n                        <img src='https://upload.wikimedia.org/wikipedia/en/d/dc/Pocket_Mortys.png'/>\r\n                        <div className={s.messages}>\r\n                        {props.message}\r\n                        </div>\r\n                        </div>\r\n                        <span>{props.likesCount} like</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Post","import React, {ChangeEvent, RefObject} from \"react\";\r\nimport s from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PostsPropTypes} from \"../../redux/redux\";\r\n\r\ntype PropsType = {\r\n    posts: Array<PostsPropTypes>\r\n    addPost: (postText: string) => void\r\n    updateNewPostText: (text: string) => void\r\n    newPostText: string\r\n}\r\n\r\nconst MyPosts = ({posts,addPost,newPostText,updateNewPostText}: PropsType) => {\r\n    const postsDataEl = posts.map(el => <Post message={el.messages} likesCount={el.likesCount}/> );\r\n    let newPostRef: RefObject<HTMLTextAreaElement> = React.createRef();\r\n\r\n    let addPoster = () => {\r\n        addPost(newPostRef.current ? newPostRef.current.value : '');\r\n       if (newPostRef.current)\r\n           return newPostRef.current.value = ''\r\n    };\r\n\r\n    const postChange = () => {\r\n        updateNewPostText(newPostRef.current ? newPostRef.current.value : '');\r\n        if (newPostRef.current)\r\n            return newPostRef.current.value = ''\r\n    };\r\n\r\n    return (\r\n        <div className={s.posts}>\r\n            <div>\r\n                MyPost\r\n            </div>\r\n            <div>\r\n                <div>\r\n                <textarea ref={newPostRef}\r\n                          value={newPostText}\r\n                          onChange={postChange}> </textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPoster}>Add Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={s.postsItems}>\r\n                {postsDataEl}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default MyPosts","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return(\r\n        <div className={s.profileInfo}>\r\n            <div>\r\n                <img src='https://cdn.pixabay.com/photo/2018/03/30/13/01/sun-3275314_960_720.jpg'/>\r\n            </div>\r\n            <div className={s.avatar}>\r\n                ava + descr\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo","import React from \"react\";\r\nimport s from './Profile.module.css'\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport {PostsPropTypes, profilePagePropTypes} from \"../redux/redux\";\r\n\r\ntype PropsType = {\r\n    profilePage: profilePagePropTypes\r\n    addPost: (text: string) => void\r\n    updateNewPostText: (text: string) => void\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n    return (\r\n        <div className={s.content}>\r\n        <ProfileInfo/>\r\n        <MyPosts posts={props.profilePage.posts}\r\n                 newPostText={props.profilePage.newPostText}\r\n                 addPost={props.addPost}\r\n                 updateNewPostText={props.updateNewPostText}/>\r\n    </div>\r\n    );\r\n}\r\nexport default Profile","import React from \"react\";\r\nimport s from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Sidebar from \"../Sidebr/Sidebar\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div>\r\n                <NavLink to='/profile' className={s.item} activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/dialogs' className={s.item} activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/news' className={s.item} activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/music' className={s.item} activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to='/settings' className={s.item} activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                Friends\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return ( <header className={s.header}>\r\n        <img src='https://img.favpng.com/20/11/13/logo-flower-royalty-free-png-favpng-T5kbUFNpSV0tFXRpGLzqXexZD.jpg'/>\r\n    </header>);\r\n}\r\nexport default Header","import React from \"react\";\r\nimport s from './News.module.css'\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n     </div>);\r\n}\r\nexport default News","import React from \"react\";\r\nimport s from './Music.module.css'\r\n\r\nconst Music = () => {\r\n    return (<div>\r\n        Music\r\n    </div>);\r\n}\r\nexport default Music","import React from \"react\";\r\nimport s from './Settings.module.css'\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div className={s.settings_wrapper}>\r\n            Settings\r\n     </div>);\r\n}\r\nexport default Settings","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\ntype PropsType = {\r\n   id: number\r\n    name: string\r\n}\r\n\r\nconst DialogsItem = (props: PropsType) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return <div className={s.dialogs + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n};\r\nexport default DialogsItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport type PropsType = {\r\n    messages: string\r\n}\r\n\r\n\r\nconst Message = (props: PropsType) => {\r\n\r\n    return(\r\n        <div className={s.message}>{props.messages}</div>\r\n    )\r\n};\r\n\r\nexport default Message","import {rerenderEntireThree} from \"../../render\";\r\n\r\nexport type stateObjectPropTypes = {\r\n    profilePage: profilePagePropTypes\r\n    dialogsPage: dialogsPagePropTypes\r\n    sidebarSlide: sidebarPagePropTypes\r\n}\r\nexport type profilePagePropTypes = {\r\n    newPostText: string\r\n    posts: Array<PostsPropTypes>\r\n}\r\nexport type sidebarPagePropTypes = {\r\n    friends: Array<FriendsPropTypes>\r\n}\r\nexport type dialogsPagePropTypes = {\r\n    newMessageText: string\r\n    dialogs: Array<DialogsPropTypes>\r\n    messages: Array<MessagesPropTypes>\r\n\r\n}\r\nexport type PostsPropTypes = {\r\n    id: number\r\n    messages: string\r\n    likesCount: number\r\n}\r\nexport type DialogsPropTypes = {\r\n    id: number\r\n    messages: string\r\n}\r\nexport type MessagesPropTypes = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type FriendsPropTypes = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nlet state: stateObjectPropTypes = {\r\n    profilePage: {\r\n        newPostText: '',\r\n        posts: [\r\n            {id: 1, messages: 'Hello', likesCount: 22},\r\n            {id: 2, messages: 'How Are You?', likesCount: 32},\r\n        ]\r\n    },\r\n    dialogsPage: {\r\n        newMessageText: '',\r\n        dialogs: [\r\n            {id: 1, messages: 'What time is it now?'},\r\n            {id: 2, messages: 'Hello'},\r\n            {id: 3, messages: 'Hey friend'},\r\n            {id: 4, messages: 'Haha'},\r\n        ],\r\n        messages: [\r\n            {id: 1, name: 'Filipp'},\r\n            {id: 2, name: 'Vika'},\r\n            {id: 3, name: 'SSSR'},\r\n            {id: 4, name: 'Alena'},\r\n            {id: 5, name: 'Sasha'},\r\n            {id: 6, name: 'Ann'},\r\n        ],\r\n\r\n    },\r\n    sidebarSlide: {\r\n        friends: [\r\n            {id: 1, name: 'Dimych'},\r\n            {id: 2, name: 'Ignat'},\r\n            {id: 3, name: 'Artem'},\r\n        ],\r\n    }\r\n};\r\nexport let addPost = () => {\r\n    let newPost: PostsPropTypes = {\r\n        id: 5,\r\n        messages: state.profilePage.newPostText,\r\n        likesCount: 22\r\n    };\r\n    state.profilePage.posts.push(newPost);\r\n    rerenderEntireThree(state);\r\n};\r\nexport let updateNewPostText = (newPostText: string) => {\r\n\r\n    state.profilePage.newPostText = newPostText;\r\n    rerenderEntireThree(state);\r\n};\r\nexport let addMessage = () => {\r\n    let newMessage: DialogsPropTypes = {\r\n        id: 8,\r\n        messages: state.dialogsPage.newMessageText\r\n    };\r\n    state.dialogsPage.dialogs.push(newMessage);\r\n    rerenderEntireThree(state);\r\n};\r\nexport let updateNewMessageText = (newMessageText: string) => {\r\n    state.dialogsPage.newMessageText = newMessageText;\r\n    rerenderEntireThree(state);\r\n};\r\n\r\nexport default state;","import React, {RefObject} from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\r\nimport Message from \"./Message/Message\";\r\nimport state, {\r\n    dialogsPagePropTypes,\r\n    DialogsPropTypes, MessagesPropTypes,\r\n    stateObjectPropTypes,\r\n    updateNewMessageText\r\n} from \"../redux/redux\";\r\n\r\ntype PropTypes = {\r\n    newMessageText: string\r\n    updateNewMessageText: (text: string) => void\r\n    addMessage: (text: string) => void\r\n    dialogs: Array<DialogsPropTypes>\r\n    messages: Array<MessagesPropTypes>\r\n}\r\n\r\n\r\nconst Dialogs = (props: PropTypes) => {\r\n\r\n    const dialogsDataEl = props.messages.map(e => <DialogsItem id={e.id} name={e.name} /> );\r\n    const messagesDataEl = props.dialogs.map(e => <Message messages={e.messages} key={e.id} /> );\r\n\r\n   let createrRef: RefObject<HTMLTextAreaElement> = React.createRef();\r\n            let addMessages = () =>  {\r\n                props.addMessage(createrRef.current ? createrRef.current.value : '');\r\n                    if(createrRef.current) {\r\n                        return createrRef.current.value = ''\r\n                    }\r\n\r\n            };\r\n\r\n            let changeMessage = () => {\r\n                updateNewMessageText(createrRef.current ? createrRef.current.value : '');\r\n                if (createrRef.current)\r\n                    return createrRef.current.value = ''\r\n            };\r\n\r\n\r\n\r\n   return (\r\n\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItem}>\r\n                {dialogsDataEl}\r\n            </div>\r\n            <div>\r\n                {messagesDataEl}\r\n            </div>\r\n            <div className={s.area}>\r\n                <textarea ref={createrRef}\r\n                          value={props.newMessageText}\r\n                    onChange={changeMessage}\r\n                > </textarea>\r\n                <div>\r\n                    <button onClick={addMessages}>Send</button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport s from './Friends.module.css'\r\nimport {FriendsPropTypes} from \"../../redux/redux\";\r\n\r\ntype PropsType = {\r\n    key: number\r\n    name: string\r\n}\r\n\r\nconst Friends = (props: PropsType) => {\r\n   return (\r\n       <div>\r\n           <h2>{props.name}</h2>\r\n       </div>\r\n    )\r\n}\r\nexport default Friends","import React from \"react\";\r\nimport s from './Sidebar.module.css'\r\nimport {FriendsPropTypes} from \"../redux/redux\";\r\nimport Friends from \"./Friends/Friends\";\r\n\r\ntype PropsType = {\r\n    friends: Array<FriendsPropTypes>\r\n}\r\n\r\nconst Sidebar = ({friends}: PropsType) => {\r\n    const friendsEl = friends.map(i => <Friends key={i.id} name={i.name} />);\r\n    return (\r\n        <div className={s.sidebar}>\r\n            <h3 className={s.friends}>Friends</h3>\r\n            123\r\n            {friendsEl};\r\n        </div>\r\n    )\r\n}\r\nexport default Sidebar","import React from 'react';\r\nimport './App.css';\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Header from \"./components/Header/Header\";\r\nimport {BrowserRouter, Route} from \"react-router-dom\";\r\nimport News from \"./components/News/News\";\r\nimport Music from './components/Music/Music';\r\nimport Settings from \"./components/Settings/Settings\";\r\nimport Dialogs from './components/Dialogs/Dialogs';\r\nimport {\r\n    dialogsPagePropTypes,\r\n    profilePagePropTypes,\r\n    stateObjectPropTypes,\r\n    updateNewMessageText\r\n} from \"./components/redux/redux\";\r\nimport Sidebar from \"./components/Sidebr/Sidebar\";\r\n\r\ntype PropsType = {\r\n    state: stateObjectPropTypes\r\n    addPost: (postText: string) => void\r\n    addMessage: (postText: string) => void\r\n    updateNewPostText: (newMessage: string) => void\r\n    updateNewMessageText: (newMessage: string) => void\r\n}\r\nconst App = (props : PropsType) => {\r\n    return (\r\n        <BrowserRouter>\r\n        <div className='app-wrapper'>\r\n            <Header />\r\n            <Navbar />\r\n            <div className='app-wrapper-content'>\r\n                <Route exact  path='/profile' render={() => <Profile profilePage={props.state.profilePage}\r\n                                                                     addPost={props.addPost}\r\n                                                                     updateNewPostText={props.updateNewPostText}/>}/>\r\n                <Route exact  path='/dialogs' render={() => <Dialogs dialogs={props.state.dialogsPage.dialogs}\r\n                                                                     messages={props.state.dialogsPage.messages}\r\n                                                                     addMessage={props.addMessage}\r\n                                                                     updateNewMessageText={props.updateNewMessageText}\r\n                                                                     newMessageText={props.state.dialogsPage.newMessageText}/>}/>\r\n                <Route exact  path ='/sidebar' render={() => <Sidebar friends={props.state.sidebarSlide.friends} />}/>\r\n                <Route exact  path='/news' render={News}/>\r\n                <Route exact  path='/music' render={Music}/>\r\n                <Route exact path='/settings' render={Settings}/>\r\n                </div>\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n    addMessage,\r\n    addPost,\r\n    stateObjectPropTypes,\r\n    updateNewMessageText,\r\n    updateNewPostText\r\n} from \"./components/redux/redux\";\r\n\r\n\r\nexport let rerenderEntireThree = (state: stateObjectPropTypes) => {\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <App\r\n                state={state}\r\n                addPost={addPost}\r\n                addMessage={addMessage}\r\n                updateNewMessageText={updateNewMessageText}\r\n                updateNewPostText={updateNewPostText}/>\r\n        </React.StrictMode>,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {rerenderEntireThree} from \"./render\";\r\nimport state from \"./components/redux/redux\";\r\n\r\nrerenderEntireThree(state);\r\n\r\n\r\n\r\n"],"sourceRoot":""}